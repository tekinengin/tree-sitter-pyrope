{
  "name": "pyrope",
  "word": "identifier",
  "rules": {
    "start": {
      "type": "REPEAT",
      "content": {
        "type": "PREC_LEFT",
        "value": 0,
        "content": {
          "type": "SEQ",
          "members": [
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "overloadname"
                },
                {
                  "type": "SYMBOL",
                  "name": "_exspression"
                }
              ]
            },
            {
              "type": "REPEAT1",
              "content": {
                "type": "SEQ",
                "members": [
                  {
                    "type": "REPEAT",
                    "content": {
                      "type": "SYMBOL",
                      "name": "_comment"
                    }
                  },
                  {
                    "type": "CHOICE",
                    "members": [
                      {
                        "type": "SYMBOL",
                        "name": "_lineterminatorsequence"
                      },
                      {
                        "type": "SYMBOL",
                        "name": "_lineterminator"
                      }
                    ]
                  }
                ]
              }
            }
          ]
        }
      }
    },
    "_exspression": {
      "type": "REPEAT1",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SYMBOL",
            "name": "binaryexpression"
          },
          {
            "type": "SYMBOL",
            "name": "_bitselectionnotation"
          }
        ]
      }
    },
    "binaryexpression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PREC",
          "value": 16,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_exspression"
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "STRING",
                    "value": "and"
                  },
                  {
                    "type": "STRING",
                    "value": "or"
                  },
                  {
                    "type": "STRING",
                    "value": "xor"
                  }
                ]
              },
              {
                "type": "SYMBOL",
                "name": "_exspression"
              }
            ]
          }
        },
        {
          "type": "PREC",
          "value": 17,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_exspression"
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "_EQUEQU"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "_ISEQU"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "_BANGEQU"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "_LE"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "_GE"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "_LT"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "_GT"
                  }
                ]
              },
              {
                "type": "SYMBOL",
                "name": "_exspression"
              }
            ]
          }
        },
        {
          "type": "PREC",
          "value": 19,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_exspression"
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "STRING",
                    "value": "|"
                  },
                  {
                    "type": "STRING",
                    "value": "^"
                  },
                  {
                    "type": "STRING",
                    "value": "&"
                  },
                  {
                    "type": "STRING",
                    "value": "++"
                  },
                  {
                    "type": "STRING",
                    "value": "--"
                  },
                  {
                    "type": "STRING",
                    "value": "<<"
                  },
                  {
                    "type": "STRING",
                    "value": ">>"
                  },
                  {
                    "type": "STRING",
                    "value": "<<<"
                  },
                  {
                    "type": "STRING",
                    "value": ">>>"
                  }
                ]
              },
              {
                "type": "SYMBOL",
                "name": "_exspression"
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 18,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_exspression"
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "STRING",
                    "value": "+"
                  },
                  {
                    "type": "STRING",
                    "value": "-"
                  }
                ]
              },
              {
                "type": "SYMBOL",
                "name": "_exspression"
              }
            ]
          }
        },
        {
          "type": "PREC",
          "value": 19,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_exspression"
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "STRING",
                    "value": "*"
                  },
                  {
                    "type": "STRING",
                    "value": "/"
                  }
                ]
              },
              {
                "type": "SYMBOL",
                "name": "_exspression"
              }
            ]
          }
        }
      ]
    },
    "_LT": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "<"
        },
        {
          "type": "STRING",
          "value": ":<"
        }
      ]
    },
    "_GT": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": ">"
        },
        {
          "type": "STRING",
          "value": ":>"
        }
      ]
    },
    "_LE": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "<="
        },
        {
          "type": "STRING",
          "value": ":<="
        }
      ]
    },
    "_GE": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": ">="
        },
        {
          "type": "STRING",
          "value": ":>="
        }
      ]
    },
    "_EQUEQU": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "=="
        },
        {
          "type": "STRING",
          "value": ":=="
        }
      ]
    },
    "_ISEQU": {
      "type": "STRING",
      "value": "is"
    },
    "_BANGEQU": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "!="
        },
        {
          "type": "STRING",
          "value": ":!="
        }
      ]
    },
    "_bitselectionnotation": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_tupledotnotation"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_bitselectionbracket"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "_bitselectionbracket": {
      "type": "REPEAT1",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "_LLBRK"
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_lhsvarname"
              },
              {
                "type": "BLANK"
              }
            ]
          },
          {
            "type": "SYMBOL",
            "name": "_RRBRK"
          }
        ]
      }
    },
    "_tupledotnotation": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_tuplearraynotation"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "."
              },
              {
                "type": "SYMBOL",
                "name": "_tuplearraynotation"
              }
            ]
          }
        }
      ]
    },
    "_tuplearraynotation": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_lhsvarname"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_LBRK"
              },
              {
                "type": "SYMBOL",
                "name": "_lhsvarname"
              },
              {
                "type": "SYMBOL",
                "name": "_RBRK"
              }
            ]
          }
        }
      ]
    },
    "_lhsvarname": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SYMBOL",
          "name": "constant"
        }
      ]
    },
    "_LLBRK": {
      "type": "STRING",
      "value": "[["
    },
    "_RRBRK": {
      "type": "STRING",
      "value": "]]"
    },
    "_LBRK": {
      "type": "STRING",
      "value": "["
    },
    "_RBRK": {
      "type": "STRING",
      "value": "]"
    },
    "_SEMICOLON": {
      "type": "STRING",
      "value": ";"
    },
    "overloadname": {
      "type": "PATTERN",
      "value": "\\.\\.[^\\n\\r\\u2028\\u2029\\s#;,={}()/?!|'\"]+\\.\\."
    },
    "identifier": {
      "type": "PATTERN",
      "value": "[!_]?[a-zA-Z%$#]{1}[a-zA-Z0-9]*[?]?"
    },
    "constant": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_stringconstant"
        },
        {
          "type": "SYMBOL",
          "name": "_numericalconstant"
        }
      ]
    },
    "_stringconstant": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "'(.*[^\"\\n\\r\\u2028\\u2029])'"
        },
        {
          "type": "PATTERN",
          "value": "\"(.*[^'\\n\\r\\u2028\\u2029])\""
        }
      ]
    },
    "_numericalconstant": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_boolean"
        },
        {
          "type": "SYMBOL",
          "name": "_hexadecimal"
        },
        {
          "type": "SYMBOL",
          "name": "_binary"
        },
        {
          "type": "SYMBOL",
          "name": "_decimalsigned"
        },
        {
          "type": "SYMBOL",
          "name": "_decimaldigit"
        }
      ]
    },
    "_boolean": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "true"
        },
        {
          "type": "STRING",
          "value": "TRUE"
        },
        {
          "type": "STRING",
          "value": "false"
        },
        {
          "type": "STRING",
          "value": "FALSE"
        }
      ]
    },
    "_decimalsigned": {
      "type": "PATTERN",
      "value": "(\\?)|([-]?[0-9]{1}[0-9_]*)(s|u)?([0-9_]+(bit){1}s?)?"
    },
    "_decimaldigit": {
      "type": "PATTERN",
      "value": "(\\?)|([-]?[0-9]{1}[0-9_]*)"
    },
    "_binary": {
      "type": "PATTERN",
      "value": "0b[\"?0-1_]+(s|u)?([\"?0-9_]+(bit){1}s?)?"
    },
    "_hexadecimal": {
      "type": "PATTERN",
      "value": "0x[\"?A-Fa-f0-9_]+(s|u)?([\"?0-9_]+(bit){1}s?)?"
    },
    "_whitespace": {
      "type": "PATTERN",
      "value": "[ \\t\\u000B\\u000C\\uFEFF]+"
    },
    "_lineterminator": {
      "type": "PATTERN",
      "value": "[\\n\\r\\u2028\\u2029]+"
    },
    "_lineterminatorsequence": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "[\\n\\u2028\\u2029]+"
        },
        {
          "type": "PATTERN",
          "value": "[\\r][\\n]?"
        }
      ]
    },
    "_comment": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_multilinecomment"
        },
        {
          "type": "SYMBOL",
          "name": "_singlelinecomment"
        }
      ]
    },
    "_multilinecomment": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "/*"
        },
        {
          "type": "PATTERN",
          "value": "((.|\\s)[^\\*\\/]*)"
        },
        {
          "type": "STRING",
          "value": "*/"
        }
      ]
    },
    "_singlelinecomment": {
      "type": "PATTERN",
      "value": "\\/\\/([^\\n\\r\\u2028\\u2029])*"
    }
  },
  "extras": [
    {
      "type": "SYMBOL",
      "name": "_whitespace"
    }
  ],
  "conflicts": [
    [
      "binaryexpression"
    ]
  ],
  "externals": [],
  "inline": [],
  "supertypes": []
}

