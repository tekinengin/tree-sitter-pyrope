{
  "name": "pyrope",
  "rules": {
    "start": {
      "type": "REPEAT",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SYMBOL",
            "name": "lineterminator"
          },
          {
            "type": "SYMBOL",
            "name": "lineterminatorsequence"
          },
          {
            "type": "SYMBOL",
            "name": "comment"
          },
          {
            "type": "SYMBOL",
            "name": "overloadname"
          },
          {
            "type": "SYMBOL",
            "name": "_tupledotnotation"
          }
        ]
      }
    },
    "exspression": {
      "type": "CHOICE",
      "members": []
    },
    "_lhsvarname": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SYMBOL",
          "name": "constant"
        }
      ]
    },
    "_tupledotnotation": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_tuplearraynotation"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "."
              },
              {
                "type": "SYMBOL",
                "name": "_tuplearraynotation"
              }
            ]
          }
        }
      ]
    },
    "_tuplearraynotation": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_lhsvarname"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "LBRK"
              },
              {
                "type": "SYMBOL",
                "name": "_lhsvarname"
              },
              {
                "type": "SYMBOL",
                "name": "RBRK"
              }
            ]
          }
        }
      ]
    },
    "RBRK": {
      "type": "STRING",
      "value": "]"
    },
    "LBRK": {
      "type": "STRING",
      "value": "["
    },
    "overloadname": {
      "type": "PATTERN",
      "value": "\\.\\.[^\\n\\r\\u2028\\u2029\\s#;,={}()/?!|'\"]+\\.\\."
    },
    "identifier": {
      "type": "PATTERN",
      "value": "[!-]?[a-zA-Z%$#]{1}[a-zA-Z0-9]*[?]?"
    },
    "constant": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_stringconstant"
        },
        {
          "type": "SYMBOL",
          "name": "_numericalconstant"
        }
      ]
    },
    "_stringconstant": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "'(.*[^\"\\n\\r\\u2028\\u2029])'"
        },
        {
          "type": "PATTERN",
          "value": "\"(.*[^'\\n\\r\\u2028\\u2029])\""
        }
      ]
    },
    "_numericalconstant": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_boolean"
        },
        {
          "type": "SYMBOL",
          "name": "_hexadecimal"
        },
        {
          "type": "SYMBOL",
          "name": "_binary"
        },
        {
          "type": "SYMBOL",
          "name": "_decimalsigned"
        },
        {
          "type": "SYMBOL",
          "name": "_decimaldigit"
        }
      ]
    },
    "_boolean": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "true"
        },
        {
          "type": "STRING",
          "value": "TRUE"
        },
        {
          "type": "STRING",
          "value": "false"
        },
        {
          "type": "STRING",
          "value": "FALSE"
        }
      ]
    },
    "_decimalsigned": {
      "type": "PATTERN",
      "value": "(\\?)|([-]?[0-9]{1}[0-9_]*)(s|u)?([0-9_]+(bit){1}s?)?"
    },
    "_decimaldigit": {
      "type": "PATTERN",
      "value": "(\\?)|([-]?[0-9]{1}[0-9_]*)"
    },
    "_binary": {
      "type": "PATTERN",
      "value": "0b[\"?0-1_]+(s|u)?([\"?0-9_]+(bit){1}s?)?"
    },
    "_hexadecimal": {
      "type": "PATTERN",
      "value": "0x[\"?A-Fa-f0-9_]+(s|u)?([\"?0-9_]+(bit){1}s?)?"
    },
    "_whitespace": {
      "type": "PATTERN",
      "value": "[ \\n\\t\\u000B\\u000C\\uFEFF]+"
    },
    "lineterminator": {
      "type": "PATTERN",
      "value": "[\\n\\r\\u2028\\u2029]+"
    },
    "lineterminatorsequence": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "[\\n\\u2028\\u2029]+"
        },
        {
          "type": "PATTERN",
          "value": "[\\r][\\n]?"
        }
      ]
    },
    "comment": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_multilinecomment"
        },
        {
          "type": "SYMBOL",
          "name": "_singlelinecomment"
        }
      ]
    },
    "_multilinecomment": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "/*"
        },
        {
          "type": "PATTERN",
          "value": "((.|\\s)[^\\*\\/]*)"
        },
        {
          "type": "STRING",
          "value": "*/"
        }
      ]
    },
    "_singlelinecomment": {
      "type": "PATTERN",
      "value": "\\/\\/((.)[^\\n\\r\\u2028\\u2029])*"
    }
  },
  "extras": [
    {
      "type": "SYMBOL",
      "name": "_whitespace"
    }
  ],
  "conflicts": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}

